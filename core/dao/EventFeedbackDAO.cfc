<!--- COMPONENT ---><cfcomponent displayname="EventFeedbackDAO" output="false" hint="I am the EventFeedbackDAO class."><!--- Pseudo-constructor ---><cfset variables.instance = {	datasource = ''} /><cffunction name="init" access="public" output="false" returntype="any" hint="I am the constructor method of the EventFeedbackDAO class.">  <cfargument name="datasource" type="any" required="true" hint="I am the Datasource bean." />  <!--- Set the initial values of the Bean --->  <cfscript>	variables.instance.datasource = arguments.datasource;  </cfscript>  <cfreturn this></cffunction><!--- PUBLIC METHODS ---><!--- CREATE ---><cffunction name="createNewEventFeedback" access="public" output="false" returntype="numeric" hint="I insert a new eventFeedback record into the event_feedback table in the database.">  <cfargument name="eventFeedback" type="any" required="true" hint="I am the EventFeedback bean." />  <cfset var qPutEventFeedback = '' />  <cfset var insertResult = '' />  <cftry>  <cfquery name="qPutEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#" result="insertResult">	INSERT INTO event_feedback		(		  speakerId,		  speakerRequestId,		  venueQuality,		  difficulty,		  avQuality,		  applicability,		  recommend,		  review		) VALUES (		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getSpeakerId()#" cfsqltype="cf_sql_integer" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getSpeakerRequestId()#" cfsqltype="cf_sql_integer" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getVenueQuality()#" cfsqltype="cf_sql_tinyint" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getDifficulty()#" cfsqltype="cf_sql_tinyint" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getAvQuality()#" cfsqltype="cf_sql_tinyint" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getApplicability()#" cfsqltype="cf_sql_tinyint" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getRecommend()#" cfsqltype="cf_sql_tinyint" />,		  <cfqueryparam value="#ARGUMENTS.eventFeedback.getReview()#" cfsqltype="cf_sql_longvarchar" />		)  </cfquery>  <!--- catch any errors --->  <cfcatch type="any">	<cfset APPLICATION.utils.errorHandler(cfcatch) />	<cfreturn 0 />  </cfcatch>  </cftry>  <!--- return the id generated by the database ---><cfreturn insertResult.GENERATED_KEY /></cffunction><!--- RETRIEVE - BY ID ---><cffunction name="getEventFeedbackById" access="public" output="false" returntype="any" hint="I return a EventFeedback bean populated with the details of a specific eventFeedback record.">  <cfargument name="id" type="numeric" required="true" hint="I am the numeric auto-increment id of the eventFeedback to search for." />  <cfset var qGetEventFeedback = '' />  <cfset var eventFeedbackObject = '' />  <cftry>  <cfquery name="qGetEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#">	SELECT eventFeedbackId, speakerId, speakerRequestId, venueQuality, difficulty, avQuality, applicability, recommend, review	FROM event_feedback	WHERE eventFeedbackId = <cfqueryparam value="#ARGUMENTS.id#" cfsqltype="cf_sql_integer" />  </cfquery>  <!--- catch any errors --->  <cfcatch type="any">	<cfset APPLICATION.utils.errorHandler(cfcatch) />	<cfreturn createObject('component','core.beans.EventFeedback').init() />  </cfcatch>  </cftry>  <cfif qGetEventFeedback.RecordCount>    <cfreturn createObject('component','core.beans.EventFeedback').init(	eventFeedbackId 	= qGetEventFeedback.eventFeedbackId,	speakerId       	= qGetEventFeedback.speakerId,	speakerRequestId	= qGetEventFeedback.speakerRequestId,	venueQuality    	= qGetEventFeedback.venueQuality,	difficulty      	= qGetEventFeedback.difficulty,	avQuality       	= qGetEventFeedback.avQuality,	applicability   	= qGetEventFeedback.applicability,	recommend       	= qGetEventFeedback.recommend,	review          	= qGetEventFeedback.review    ) />  <cfelse>    <cfreturn createObject('component','core.beans.EventFeedback').init() />  </cfif></cffunction><!--- RETRIEVE - BY REQUEST ID ---><cffunction name="getEventFeedbackByRequestId" access="public" output="false" returntype="any" hint="I return a EventFeedback bean populated with the details of a specific eventFeedback record.">  <cfargument name="id" type="numeric" required="true" hint="I am the numeric speaker request id of the eventFeedback to search for." />  <cfset var qGetEventFeedback = '' />  <cfset var eventFeedbackObject = '' />  <cftry>  <cfquery name="qGetEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#">  SELECT eventFeedbackId, speakerId, speakerRequestId, venueQuality, difficulty, avQuality, applicability, recommend, review  FROM event_feedback  WHERE speakerRequestId = <cfqueryparam value="#ARGUMENTS.id#" cfsqltype="cf_sql_integer" />  </cfquery>  <!--- catch any errors --->  <cfcatch type="any">  <cfset APPLICATION.utils.errorHandler(cfcatch) />  <cfreturn createObject('component','core.beans.EventFeedback').init() />  </cfcatch>  </cftry>  <cfif qGetEventFeedback.RecordCount>    <cfreturn createObject('component','core.beans.EventFeedback').init(  eventFeedbackId   = qGetEventFeedback.eventFeedbackId,  speakerId         = qGetEventFeedback.speakerId,  speakerRequestId  = qGetEventFeedback.speakerRequestId,  venueQuality      = qGetEventFeedback.venueQuality,  difficulty        = qGetEventFeedback.difficulty,  avQuality         = qGetEventFeedback.avQuality,  applicability     = qGetEventFeedback.applicability,  recommend         = qGetEventFeedback.recommend,  review            = qGetEventFeedback.review    ) />  <cfelse>    <cfreturn createObject('component','core.beans.EventFeedback').init() />  </cfif></cffunction><!--- UPDATE ---><cffunction name="updateEventFeedback" access="public" output="false" returntype="numeric" hint="I update this eventFeedback record in the event_feedback table of the database.">  <cfargument name="eventFeedback" type="any" required="true" hint="I am the EventFeedback bean." />  <cfset var qUpdEventFeedback = '' />  <cftry>  <cfquery name="qUpdEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#">	UPDATE event_feedback SET	  speakerId = <cfqueryparam value="#ARGUMENTS.eventFeedback.getSpeakerId()#" cfsqltype="cf_sql_int" />,	  speakerRequestId = <cfqueryparam value="#ARGUMENTS.eventFeedback.getSpeakerRequestId()#" cfsqltype="cf_sql_int" />,	  venueQuality = <cfqueryparam value="#ARGUMENTS.eventFeedback.getVenueQuality()#" cfsqltype="cf_sql_tinyint" />,	  difficulty = <cfqueryparam value="#ARGUMENTS.eventFeedback.getDifficulty()#" cfsqltype="cf_sql_tinyint" />,	  avQuality = <cfqueryparam value="#ARGUMENTS.eventFeedback.getAvQuality()#" cfsqltype="cf_sql_tinyint" />,	  applicability = <cfqueryparam value="#ARGUMENTS.eventFeedback.getApplicability()#" cfsqltype="cf_sql_tinyint" />,	  recommend = <cfqueryparam value="#ARGUMENTS.eventFeedback.getRecommend()#" cfsqltype="cf_sql_tinyint" />,	  review = <cfqueryparam value="#ARGUMENTS.eventFeedback.getReview()#" cfsqltype="cf_sql_longvarchar" />	WHERE eventFeedbackId = <cfqueryparam value="#ARGUMENTS.eventFeedback.getEventFeedbackId()#" cfsqltype="cf_sql_integer" />  </cfquery>  <!--- catch any errors --->  <cfcatch type="any">	<cfset APPLICATION.utils.errorHandler(cfcatch) />	<cfreturn 0 />  </cfcatch>  </cftry>  <cfreturn ARGUMENTS.eventFeedback.getEventFeedbackId() /></cffunction><!--- DELETE ---><cffunction name="deleteEventFeedbackByID" access="public" output="false" returntype="boolean" hint="I delete a eventFeedback from eventFeedback table in the database.">  <cfargument name="id" type="numeric" required="true" hint="I am the numeric auto-increment id of the eventFeedback to delete." />  <cfset var qDelEventFeedback = '' />  <cftry>    <cfquery name="qDelEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#">		DELETE FROM event_feedback		WHERE eventFeedbackId = <cfqueryparam value="#ARGUMENTS.id#" cfsqltype="cf_sql_integer" />	</cfquery>    <cfcatch type="database">      <cfreturn false />    </cfcatch>  </cftry>  <cfreturn true /></cffunction><!--- UTILITY FUNCTIONS ---><!--- SAVE ---><cffunction name="saveEventFeedback" access="public" output="false" returntype="any" hint="I handle saving a eventFeedback either by creating a new entry or updating an existing one.">  <cfargument name="eventFeedback" type="any" required="true" hint="I am the EventFeedback bean." />  <cfif exists(ARGUMENTS.eventFeedback)>	<cfreturn updateEventFeedback(ARGUMENTS.eventFeedback) />  <cfelse>	<cfreturn createNewEventFeedback(ARGUMENTS.eventFeedback) />  </cfif></cffunction><!--- EXISTS ---><cffunction name="exists" access="private" output="false" returntype="boolean" hint="I check to see if a specific EventFeedback is in the database, using ID as the check.">  <cfargument name="eventFeedback" type="any" required="true" hint="I am the EventFeedback bean." />  <cfset var qGetEventFeedback = '' />  <cfquery name="qGetEventFeedback" datasource="#variables.instance.datasource.getDSN()#" username="#variables.instance.datasource.getUsername()#" password="#variables.instance.datasource.getPassword()#">	SELECT eventFeedbackId FROM event_feedback	WHERE eventFeedbackId = <cfqueryparam value="#ARGUMENTS.eventFeedback.getEventFeedbackId()#" cfsqltype="cf_sql_integer" />  </cfquery>  <cfif qGetEventFeedback.RecordCount>	<cfreturn true />  <cfelse>	<cfreturn false />  </cfif></cffunction></cfcomponent>